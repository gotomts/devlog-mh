version: 2.1

jobs:
  test:
    docker:
      - image: circleci/php:7.4-node-browsers
        environment:
          - APP_DEBUG: true
          - APP_ENV: testing
          - DB_CONNECTION: mysql
          - DB_DATABASE: devlog_mh_test
          - DB_USERNAME: root
          - DB_HOST: 127.0.0.1

      - image: circleci/mysql:8-ram
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: true
          - MYSQL_DATABASE: devlog_mh_test

    steps:
      - checkout
      - run:
          name: Install MySQL driver
          command: |
            sudo docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd
            sudo docker-php-ext-install zip bcmath pdo_mysql
      - run:
          name: Install Node
          command: |
            curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
            sudo apt-get install -y nodejs

      # Download and cache dependencies

      # composer cache
      - run: ls -la
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
      - run: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      # node cache
      - restore_cache:
          keys:
            - node-v4-{{ checksum "package.json" }}
            - node-v4-
      - run: npm install
      - save_cache:
          key: node-v4-{{ checksum "package.json" }}
          paths:
            - node_modules
            - ~/.yarn

      # prepare the database
      - run: php artisan migrate --env=testing --database=mysql --force

      # run tests
      - run: ./vendor/bin/phpunit

      - store_artifacts:
          path: /tmp/dumps

      - slack/status:
          success_message: ':circleci-pass: $CIRCLE_BRANCH のテストが成功しました\n:github_octocat: User：$CIRCLE_USERNAME'
          failure_message: ':circleci-fail: $CIRCLE_BRANCH のテストが失敗しました\n:github_octocat: User：$CIRCLE_USERNAME'
          webhook: '${SLACK_WEBHOOK}'

  deploy:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - '${FINGER_PRINTS}'

      - run: ssh -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} "/var/www/test/bin/deploy.sh"

      - slack/status:
          success_message: ':circleci-pass: デプロイが成功しました\n:github_octocat: User：$CIRCLE_USERNAME'
          failure_message: ':circleci-fail: デプロイが失敗しました\n:github_octocat: User：$CIRCLE_USERNAME'
          webhook: '${SLACK_WEBHOOK}'

orbs:
  slack: circleci/slack@3.4.2

workflows:
  version: 2
  app-test:
    jobs:
      - test
      # - test:
      #     filters:
      #       branches:
      #         only: develop
  app-deploy:
    jobs:
      - deploy
